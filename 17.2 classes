 It is not necessary that the function definition is textually enclosed in the class definition: 
 assigning a function object to a local variable in the class is also ok.
 For example:
 
 def eat(self):
    print(self.name)


class Animal:
    def __init__(self,name):
        self.name = name

    e = eat


a = Animal('tiger')
a.e()



****************************************************************************
avoid creating multiple reference to same function

class Animal:
    def eat(self):
        print('eating')

    e = eat


a = Animal()
a.e()
a.eat()

#ouput : e being exactly equivalent to eat. Note that this practice usually only serves to confuse the reader of a program.
eating
eating

************************************************************************************
* adding function to existing class using __setattr__ function


class Calculator:
    def square(self,x):
        return x*x


a = Calculator()


def cube(x):
    return x*x*x    #for complex code ,use seperate function

a.__setattr__('get_cube',lambda x:cube(x))
#a.__setattr__('get_cube',lambda x:x*x*x) #use single expression for simple code

print(a.get_cube(3))
#output : 27
